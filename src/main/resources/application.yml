spring:
  profiles:
    active: dev
  application:
    name: ai-agent-system
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://<你的数据库地址>/<你的数据库名称> # 配置你的数据库引擎
    username: <你的账户>
    password: <你的密码>
  data:
    redis: # 你的redis配置
      host: 127.0.0.1
      port: 6379
      connect-timeout: 5000
      ttl: 3600
      lettuce:
        pool:
          # 最大连接数
          max-active: 200
          # 连接池最大阻塞等待时间（负值代表没有限制）
          max-wait: -1
          # 连接池中的最大空闲连接
          max-idle: 10
          # 连接池中的最小空闲连接
          min-idle: 0
      database: 3
  mail:
    host: smtp.qq.com
    port: 587
    username: <你的邮箱>@qq.com
    password: <你的授权码>
    default-encoding: UTF-8
    properties:
      smtp:
        auth: true
      starttls:
        enable: true
server:
  port: 8123
  servlet:
    context-path: /api
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: false
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true # 是否开启下划线和驼峰的映射，默认开启
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除字段名
      logic-delete-value: 1 # 逻辑已删除值
      logic-not-delete-value: 0 # 逻辑未删除值
      id-type: assign_id  # 默认使用雪花算法
# springdoc-openapi
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.ai.controller
# knife4j
knife4j:
  enable: true
  setting:
    language: zh_cn

langchain4j:
  open-ai:
    chat-model:
      base-url: <你的模型地址>
      api-key: <你的api密钥>
      model-name: deepseek-chat
      log-requests: true
      log-responses: true
      max-tokens: 8192
#      strict-json-schema: true
#      response-format: json_object
    streaming-chat-model:
      base-url: <你的模型地址>
      api-key: <你的api密钥>
      model-name: deepseek-chat
      log-requests: true
      log-responses: true
      max-tokens: 8192
cos:
  client:
    host: <你的端口>
    secretId: <你的密钥>
    secretKey: <你的密钥>
    region: <你的地域>
    bucket: <你的桶>
pexels:
  api-key: <你的密钥>

dashscope:
  api-key: <你的阿里云百炼密钥>
  image-model: <你的阿里云百炼文生图模型>

